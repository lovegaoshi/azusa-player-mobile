name: APM iOS dev Build
on:
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:
jobs:
  checkLastCommit:
    uses: ./.github/workflows/reuse-check-last-commit.yml
    
  buildIPA:
    runs-on: macos-15
    name: build IPA
    needs: checkLastCommit
    if: ${{ needs.checkLastCommit.outputs.is_new_commit }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: enable corepack
        run: corepack enable

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: 'Create env file'
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
          SENTRY_PROPERTIES: ${{ secrets.SENTRY_PROPERTIES }}
        run: |
          echo "$ENV_FILE" > .env
          echo "$SENTRY_PROPERTIES" > ./ios/sentry.properties
          sudo xcode-select -switch /Applications/Xcode_26.0.app
          echo "APPSTORE=true" >> .env
          git submodule update --init --recursive

      - name: alias yarn.cmd to yarn
        run: alias yarn.cmd="yarn"

      - name: Install dependencies
        run: yarn install; yarn ios:build

      - name: python fixHTTP
        run: |
          python ./scripts/fixHTTP.py
          python ./scripts/fixiOSBuild.py
          python ./scripts/release_bump.py --dev

      - name: build
        run: cd ios  && xcodebuild -downloadPlatform iOS && xcodebuild -scheme APM -workspace example.xcworkspace -destination generic/platform=iOS -configuration Release clean archive -archivePath "build/APM.xcarchive" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

      - name: archive to ipa
        run: |
          cd ios
          mkdir build/Payload
          mv build/APM.xcarchive/Products/Applications/AzusaPlayer.app build/Payload/AzusaPlayer.app
          cd build
          zip -r APM.ipa Payload/

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.GIT_BRANCH }}-build-${{ steps.date.outputs.date }}
          files: ios/build/APM.ipa
          prerelease: true
          target_commitish: ${{ env.GIT_BRANCH }}
