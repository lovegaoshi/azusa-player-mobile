{
  "_comment": "src/localization/en/translation.json",
  "Artist": {
    "top": "Top",
    "latest": "Latest",
    "errorTitle": "Uh oh...",
    "errorContent": "Nothing will be displayed. You shouldnt be here.",
    "loading": "Now Loading: {{name}}'s Artist Page",
    "subscribers": "{{c}} subscribers"
  },
  "Equalizer": {
    "EqualizerOptionsName": "Equalizer",
    "EqualizerOptionsDesc": "Enable Equalizer",
    "EqualizerOptionsTitle": "Choose EQ Preset",
    "Normal": "Normal",
    "Pop": "Pop",
    "Jazz": "Jazz",
    "Rock": "Rock",
    "Classical": "Classical",
    "Dance": "Dance",
    "Flat": "Flat",
    "Heavy Metal": "Heavy Metal",
    "Folk": "Folk",
    "Hip Hop": "Hip Hop"
  },
  "SponsorBlock": {
    "SponsorBlockOptionsName": "SponsorBlock",
    "SponsorBlockOptionsDesc": "Enable SponsorBlock",
    "sponsorBlockEnabledName": "SponsorBlock",
    "sponsorBlockEnabledDesc": "Enable SponsorBlock",
    "SponsorBlockCategoryName": "SponsorBlock Category",
    "SponsorBlockCategoryDesc": "Select SponsorBlock Category",
    "SponsorBlockCategoryTitle": "Enable SB for...",
    "sponsor": "Sponsor",
    "selfpromo": "Selfpromo",
    "exclusive_access": "Exclusive Access",
    "interaction": "Interaction",
    "intro": "Intro",
    "outro": "Outro",
    "preview": "Preview",
    "filler": "Filler",
    "music_offtopic": "Music Offtopic",
    "poi_highlight": "POI Highlight",
    "SkipMsg": "[SponsorBlock] Skipping {{category}}..."
  },
  "YTMusic": {
    "ChartVideo": "MV",
    "ChartTrending": "Trending",
    "ChartArtist": "Artists",
    "ChartGenres": "Genres",
    "ChartSongs": "Songs"
  },
  "Billing": {
    "PremiumFeaturesIntro": "Thank you for considering supporting APM with real money. All funds will go towards buying a copy of Buldur's Gate 3. In return, APM will hide the app start splash ad.",
    "NoxAuth": "Authenticate through Bilibili",
    "RevenueCat": "Purchase via Appstore(RevenueCat)",
    "NoxFans": "Bilibili users that are currently \"guards\" to Azusa and Nox will be granted premium access for free. Please click the Bilibili Auth button above to authenticate.",
    "thankU": "Thank you!",
    "godBlessU": "God bless you!",
    "urVeryVeryGorgeous": "You are very very gorgeous.",
    "StripePurchase": "Purchase via Stripe",
    "StripePurchaseNote": "!!Please use {{biliMid}} as biliuserID in the purchase page!! \nAnd please restart APM after purchase.",
    "BiliUserNotLoggedIn": "You must login via bilibili to purchase premium access."
  },
  "BiliCategory": {
    "top": "Top Songs",
    "ranking": "Ranking",
    "dynamic": "Feed",
    "hot": "Hot Songs",
    "new": "New Songs",
    "3": "Music",
    "28": "Original Score",
    "31": "Covers",
    "30": "Vocaloid",
    "59": "Instrumental",
    "193": "MV",
    "22": "Guide",
    "26": "MAD",
    "126": "Manual Vocaloid",
    "29": "Live"
  },
  "appDrawer": {
    "homeScreenName": "Home",
    "exploreScreenName": "Discover",
    "settingScreenName": "Settings",
    "LoginName": "User Login",
    "PremiumName": "Premium Content"
  },
  "Dialog": {
    "ok": "Done",
    "cancel": "Cancel",
    "addEntry": "Add",
    "zero": "Zero",
    "nullify": "Nullify"
  },
  "CopiedPlaylistDialog": { "title": "Send {{title}} to..." },
  "NewPlaylistDialog": {
    "title": "Create {{fromList.title}} as New Playlist...",
    "titleNew": "Create New Playlist...",
    "label": "Playlist name"
  },
  "PlaylistSettingsDialog": {
    "playlistNameLabel": "Playlist Name",
    "subscribeUrlLabel": "Subscribe URL",
    "blacklistedUrlLabel": "Banned BVIDs",
    "useBiliShazamLabel": "Use BiliShazam",
    "useBiliSyncLabel": "BiliSync as favorite",
    "repeatMode": "playlist specific repeat mode",
    "useNewSongOverwriteLabel": "New songs overwrite"
  },
  "RenameSongDialog": {
    "title": "Remame {{song.name}} to...",
    "label": "Song name"
  },
  "PlaylistsDrawer": {
    "SearchListTitle": "Search",
    "SearchListTitleNA": "MISSINGNO."
  },
  "BiliSearchBar": { "label": "Bilibili URL" },
  "PlaylistSearchBar": { "label": "Search" },
  "PlaylistOperations": {
    "updating": "Now updating {{playlist.title}}'s subscriptions...",
    "updated": "Playlist {{playlist.title}} updated",
    "reloading": "Now reloading {{playlist.title}}'s BVIDs...",
    "reloaded": "Playlist {{playlist.title}} is reset",
    "cleaning": "Now cleaning broken BVIDs in {{playlist.title}}...",
    "cleaned": "Playlist {{playlist.title}} broken links are cleaned",
    "bilishazaming": "Now shazaming {{playlist.title}}...",
    "bilishazamed": "Playlist {{playlist.title}} shazamed",
    "bilisyncing": "Now syncing {{playlist.title}} to Bilibili...",
    "bilisynced": "Playlist {{playlist.title}} synced",
    "clearListTitle": "Clear {{playlist.title}}?",
    "clearListMsg": "Are you sure to clear playlist {{playlist.title}}?",
    "deleteListTitle": "Delete {{playlist.title}}?",
    "deleteListMsg": "Are you sure to delete playlist {{playlist.title}}?",
    "resetListTitle": "Reload {{playlist.title}}?",
    "resetListMsg": "Are you sure to reload all BVIDs in  playlist {{playlist.title}}?",
    "resetting": "Now reloading {{playlist.title}}'s BVIDs...",
    "reset": "Playlist {{playlist.title}} is reset",
    "playlistSettingsTitle": "Settings...",
    "playlistSendToTitle": "Send to...",
    "bilishazamTitle": "BiliShazam",
    "bilisyncTitle": "BiliSync",
    "analyticsTitle": "Analytics",
    "removeBrokenTitle": "Clean Up",
    "reloadBVIDTitle": "Reload",
    "clearPlaylistTitle": "Clear",
    "removePlaylistTitle": "Remove",
    "all": "All",
    "sortDiagTitle": "Sort by...",
    "sortDialogTitle": "Sort {{playlist.title}} by...",
    "ascending": "Ascending?",
    "sortTitle": "title",
    "sortArtist": "artist",
    "sortAlbum": "album",
    "sortDate": "date",
    "sortLastPlayed": "last played",
    "sortPlayCount": "play count",
    "sortPreviousOrder": "previous",
    "searchListName": "Search"
  },
  "Download": {
    "downloadingNotifTitle": "Downloading...",
    "downloadingNotif": "now downloading {{song.parsedName}}... ({{progress}}%)",
    "downloadingNotifCompleteTitle": "Downloading Complete",
    "downloadingNotifComplete": "{{song.parsedName}} is downloaded!",
    "downloading": "now downloading {{song.parsedName}}...",
    "downloaded": "{{song.parsedName}} is downloaded to Music/APM",
    "downloadFailed": "{{song.parsedName}} download failed"
  },
  "SongOperations": {
    "songDownloadTitle": "Download",
    "songSendToTitle": "Send to...",
    "songRenameTitle": "Rename...",
    "songSearchInPlaylistTitle": "Search in Playlist",
    "BVIDSearchTitle": "Search in Bilibili",
    "songStartRadio": "Start Radio",
    "songR128gain": "R128Gain",
    "abrepeat": "ABrepeat",
    "abrepeatTitle": "{{song.parsedName}} A-B repeat",
    "songRemoveTitle": "Remove",
    "songRemoveNBanTitle": "Ban",
    "reloadSong": "Reload",
    "selectedSongs": "Selected songs",
    "selectedSongsAndSong": "{{name}} and {{count}} more..."
  },
  "GeneralSettings": {
    "autoRSSUpdateName": "Daily auto RSS update",
    "autoRSSUpdateDesc": "Automatically update playlist's subscriptions daily when opened.",
    "parseSongNameName": "Parse song name",
    "parseSongNameDesc": "Show automatically parsed song names in playlist.",
    "keepSearchedSongListWhenPlayingName": "Play searched results",
    "keepSearchedSongListWhenPlayingDesc": "When searching in a playlist, play the seached results.",
    "dataSaverName": "Data Saver",
    "dataSaverDesc": "Prefers cached songs when using cellular data",
    "noCookieBiliSearchName": "Bilibili Customized Search",
    "noCookieBiliSearchDesc": "Enable credentials in bilibili search to show customized searchresults",
    "updateLoadedTrackName": "Update Track Metadata",
    "updateLoadedTrackDesc": "Always retrieve the track metadata regardless of cache status",
    "r128gainName": "R128gain OTF",
    "r128gainDesc": "Enable on-the-fly R128gain (only works when cache is enabled)",
    "prefetchTrackName": "Prefetch Tracks",
    "prefetchTrackDesc": "Prefetch the next track (only works when cache is enabled)",
    "smartShuffleName": "Smart Shuffle",
    "smartShuffleDesc": "Shuffle songs that the next song is different from the previous",
    "chatGPTResolveNameName": "ChatGPT on Songs",
    "chatGPTResolveNameDesc": "TODO: Use chatGPT to resolve song names",
    "lyricTapName": "Seek on Lyric Tap",
    "lyricTapDesc": "Seek to song when tapping on lyrics",
    "noBiliR128GainName": "Disable BiliR128Gain",
    "noBiliR128GainDesc": "Disable Bili R128gain, use ffmpeg instead",
    "pausePlaybackOnMuteName": "Pause Playback on Mute",
    "pausePlaybackOnMuteDesc": "Android only. Pause playback when volume becomes 0",
    "artworkCarouselName": "artwork carousel",
    "artworkCarouselDesc": "enable artwork carousel (swipe to skip; bugs)",
    "preferYTMSuggestName": "Prefers YTM suggest",
    "preferYTMSuggestDesc": "prefers YTM suggest instead of related videos",
    "useSuggestionName": "BiliSuggestion",
    "useSuggestionDesc": "Show suggestions when searching in the search bar",
    "noRepeatName": "Disable queue",
    "noRepeatDesc": "disable queue (auto next)",
    "memoryEfficiencyName": "Memory Efficiency",
    "memoryEfficiencyDesc": "async load songlists from playlists; NEED RESTART! will cause data loss",
    "keepForegroundName": "Keep Foreground Service",
    "keepForegroundDesc": "enable to waste a LOT of battery",
    "audioOffloadName": "Audio Offload",
    "audioOffloadDesc": "enable audio offload to a dedicated processsor (may save battery)",
    "parseEmbeddedArtworkName": "Parse Embedded Artwork",
    "parseEmbeddedArtworkDesc": "Parse embedded artwork 1 additional time for android auto (will slow local playback otherwise!!).",
    "skipSilenceName": "Skip Silence",
    "skipSilenceDesc": "skip segments with no audio (exoplayer feature)",
    "karaokeLyricsName": "Karaoke Lyrics",
    "karaokeLyricsDesc": "Show karaoke style lyrics",
    "biliEditAPIName": "use bilibili edit API",
    "biliEditAPIDesc": "use bilibili edit API when renaming songs",
    "screenAlwaysWakeName": "Lyric screen always on",
    "screenAlwaysWakeDesc": "turn screen always on at lyric screen",
    "fastBiliSearchName": "Fast Bilibili Search",
    "fastBiliSearchDesc": "Do not search for bilibili video episodes.",
    "suggestedSkipLongVideoName": "Skip Long Recommended Video",
    "suggestedSkipLongVideoDesc": "Skip > 10 min videos when in playing suggested mode."
  },
  "PlaybackSettings": {
    "GeneralSettingName": "Playback",
    "GeneralSettingDesc": "Playback related settings"
  },
  "DeveloperSettings": {
    "OTAUName": "OTA Update",
    "OTAUDesc": "OTA update (do not touch)",
    "LogName": "Show logs",
    "LogDesc": "Show the current logs.",
    "LogLevelName": "Log Level",
    "LogLevelDesc": "set Log Level.",
    "FadeName": "Fade In/out",
    "FadeDesc": "Set Fade In/out interval (need restart)",
    "FadeTitle": "Set Fade In/out (ms)",
    "crossfadeName": "Crossfade",
    "crossfadeDesc": "enable crossfading (need restart).",
    "artworkResName": "Artwork Resolution",
    "artworkResDesc": "rescale artwork resolution during scaling (why? i dont know)",
    "crossfadeTitle": "Set Fade In/out (ms)",
    "VersionCheckName": "Check Version",
    "VersionCheckDesc": "Check latest version released on github.",
    "noInterruptionName": "No Interruption",
    "noInterruptionDesc": "Disables Event.RemoteDuck to prevent interruption (NEED RESTART)",
    "CacheSizeName": "Max Cached Song Size",
    "CacheSizeDesc": "Disables Event.RemoteDuck to prevent interruption (NEED RESTART)",
    "CacheSizeDesc2": "Currently set to hold a max of {{val}} songs in cache (NEED RESTART).",
    "ClearCacheName": "Clear Cache",
    "ClearCacheDesc": "Clear all cached songs.",
    "ClearCacheDesc2": "Clear all cached {{val}} songs.",
    "ClearOrphanedCacheName": "Clear Orphaned Cache",
    "ClearOrphanedCacheDesc": "Clear all cached songs.",
    "ClearOrphanedCacheDesc2": "Clear all orphaned cached {{val}} songs.",
    "TanakaName": "Tanaka Amazing Commodities",
    "TanakaDesc": "Granter of your desires!",
    "DebugLogName": "Player Status",
    "DebugLogDesc": "Show TP's current status",
    "LogLevel0": "DEBUG",
    "LogLevel1": "INFO",
    "LogLevel2": "WARN",
    "LogLevel3": "ERROR",
    "LogLevel4": "CRITICAL",
    "LogLevel5": "OFF"
  },
  "Settings": {
    "PlaybackSettingName": "Playback",
    "HomeSettingName": "Settings",
    "GeneralSettingName": "General",
    "GeneralSettingDesc": "General APM settings",
    "PluginsSettingName": "Plugins",
    "PluginsSettingDesc": "Plugins may modify app behavior. Continue with discretion.",
    "AppearanceSettingName": "Appearance",
    "AppearanceSettingDesc": "Change APM appearances",
    "SkinSettingName": "Skins",
    "SkinSettingDesc": "Change APM skin",
    "BackupSettingName": "Playlist Backup",
    "BackupSettingDesc": "Backup APM playlists via Dropbox",
    "InfoSettingName": "About",
    "InfoSettingDesc": "About APM",
    "SplashSettingName": "Splashes",
    "SplashSettingDesc": "View APM's splash ads",
    "DeveloperOptionsName": "Developer Options",
    "DeveloperOptionsDesc": "Experimental features may cause instabilities/does not work as expected",
    "PremiumSettingName": "Premium APM",
    "PremiumSettingDesc": "Buy Premium features",
    "AListOptionsName": "AList",
    "AListOptionsDesc": "Set up AList creds",
    "DownloadOptionsName": "Download",
    "DownloadOptionsDesc": "APM Download",
    "LanguageOptionsName": "Change Language",
    "LanguageOptionsDesc": "Change app language",
    "LanguageOptionsTitle": "Change Language",
    "LoginName": "Bilibili Login",
    "LoginDesc": "login to bilibili",
    "FeatureNotImplemented": "Feature not implemented"
  },
  "AList": {
    "Name": "Alist",
    "Add": "Add Alist Creds",
    "Site": "Site",
    "Password": "Password"
  },
  "PluginSettings": {
    "UpdatingRegExpFromGithub": "Update RegExp rules from Github...",
    "UpdatedRegExpFromGithub": "Updated RegExp rules from GitHub!",
    "UpdateFailRegExpFromGithub": "Updated RegExp rules from GitHub FAILED.",
    "UpdatingR128GainFromGithub": "Update R128Gain rules from Github...",
    "UpdatedR128GainFromGithub": "Updated R128Gain rules from GitHub!",
    "UpdateFailR128GainFromGithub": "Updated R128Gain rules from GitHub FAILED.",
    "UpdatingABRepeatFromGithub": "Update ABRepeat rules from Github...",
    "UpdatedABRepeatFromGithub": "Updated ABRepeat rules from GitHub!",
    "UpdateFailABRepeatFromGithub": "Updated ABRepeat rules from GitHub FAILED.",
    "RegExpName": "Update RegExp",
    "RegExpDesc": "Update RegExp rules from GitHub",
    "MusicFreeName": "MusicFree Plugins",
    "MusicFreeDesc": "Do NOT use, uve been warned.",
    "MusicFreeCheckTitle": "MusicFree Plugins",
    "R128GainName": "Update R18Gain",
    "R128GainDesc": "Update R18Gain rules from GitHub",
    "ABRepeatName": "Update ABRepeat",
    "ABRepeatDesc": "Update ABRepeat rules from GitHub"
  },
  "AppearanceSettings": {
    "fontScaleName": "Font Scale",
    "fontScaleDesc": "Adjust fonts to be smaller or bigger",
    "fontScale0": "Extra Small",
    "fontScale1": "Small",
    "fontScale2": "Medium",
    "fontScale3": "Large",
    "fontScale4": "Extra Large",
    "fontScale5": "Extra Extra Large",
    "fontScale6": "Fatass",
    "selectPhotoName": "Select Photo",
    "selectPhotoDesc": "Select local photo as background",
    "noWeebSkinsName": "Weeb be Gone",
    "noWeebSkinsDesc": "Turn off weeb skins",
    "accentColorName": "Use Accent Color",
    "accentColorDesc": "Use accent color from song covers when not using weeb skins",
    "PrimaryColor": "Primary color:",
    "SecondaryColor": "Secondary color:",
    "ContrastColor": "Contrast color:",
    "BackgroundColor": "Background color:",
    "ColorSchemeName": "Select Color Scheme",
    "ColorSchemeDesc": "Current color scheme is {{ scheme }}",
    "alwaysShowBottomTabName": "Show Bottom Tab",
    "alwaysShowBottomTabDesc": "Always show bottom tab, regardless of gesture mode",
    "wavyProgressBarName": "Wavy Progress Bar",
    "wavyProgressBarDesc": "Show a wavy progress bar (huge battery drain)",
    "ColorSchemeLight": "light",
    "ColorSchemeDark": "dark",
    "ColorSchemeAdaptive": "adaptive",
    "hideCoverInMobileName": "Hide album cover",
    "hideCoverInMobileDesc": "Hide the album cover.",
    "trackCoverArtCardName": "Track Cover Art",
    "trackCoverArtCardDesc": "Show a song's cover art when selected"
  },
  "Sync": {
    "Local": "Local",
    "Dropbox": "Dropbox",
    "Gitee": "Gitee",
    "Github": "Github",
    "PersonalCloud": "Personal Cloud",
    "ExportLocation": "Select Sync:",
    "DropboxUploadSuccess": "APM playlists synced to Dropbox!",
    "DropboxUploadFail": "APM playlists failed to sync 2 dropbox",
    "DropboxUploadFailSnackbar": "APM playlists failed to sync to Dropbox!",
    "DropboxDownloadSuccess": "APM playlists synced from dropbox!",
    "DropboxDownloadFail": "APM playlists DNE on dropbox",
    "DropboxDownloadFailSnackbar": "APM playlists failed to sync from dropbox",
    "PersonalCloudUploadSuccess": "歌单上传到PersonalCloud成功！",
    "PersonalCloudUploadFail": "云端歌单不存在",
    "PersonalCloudUploadFailSnackbar": "歌单上传到PersonalCloud失败，错误记录在控制台里",
    "PersonalCloudDownloadSuccess": "歌单同步自PersonalCloud成功！",
    "PersonalCloudDownloadFail": "云端歌单不存在",
    "PersonalCloudDownloadFailSnackbar": "歌单同步到PersonalCloud失败，错误记录在控制台里",
    "personalCloudIPPlaceholder": "end with forward slash /",
    "PersonalCloudKeySuggestion": "If you're syncing with NoxPlayer the extension, please use your BILIBILI USER NAME as key",
    "personalCloudIPLabel": "Private cloud IP address",
    "personalCloudKeyPlaceholder": "",
    "personalCloudKeyLabel": "Private cloud key",
    "fileNotValidJson": "selected backup file is corrupted.",
    "NoxExtensionImportTitle": "noxplayer format detected",
    "NoxExtensionImportMsg": "How do you want to import playlists from noxplayer?",
    "NoxExtensionOverwrite": "Overwrite",
    "NoxExtensionAppend": "Append",
    "NoxExtensionCancel": "Cancel"
  },
  "SleepTimer": { "Title": "Sleep Timer" },
  "Login": {
    "BilibiliNotLoggedIn": "User not logged in\n",
    "BilibiliLoginButton": "QR log in",
    "BilibiliCookieInputButton": "Manually input cookies",
    "BilibiliCookieInputDialogTitle": "Add Bili Cookies",
    "BilibiliLoginQRGeneration": "Generating QR code...",
    "BilibiliLoginQRGenerated": "Scan QR code in Bilibili app to login",
    "BilibiliLoginQRGenerateFailed": "Bilibili QR code generation failed. Please check network.",
    "BilibiliLoginQRExpired": "Bilibili QR code expired. Regenerate to login.",
    "BilibiliLoginProbeFailed": "Checking QR code login status failed. Please check network.",
    "Disclaimer": "Using bilibili cookies in this app may BAN your account/IP due to API abuse. At the very least use a spare account.",
    "SyncBiliFavlist": "Sync from bilibili favorites",
    "Logout": "LOGOUT",
    "Clear": "Clear (emergency)",
    "Login": "Login",
    "Check": "Check"
  },
  "VersionUpdate": {
    "DownloadAPK": "Update",
    "DownloadingAPK": "Downloading the latest APM armv8 APK...",
    "DownloadedAPK": "Update APM",
    "NoUpdates": "Noxplayer is already at the newest version.\nCurrent version:{{currentVersion}}\nDev version: {{devVersion}}",
    "UpdateCheckingSnackbar": "Checking updates...",
    "UpdateCheckingFailedSnackbar": "Checking update via github failed.",
    "UpdateFoundTitle": "New update found!",
    "UpdateFoundContent": "Noxplayer version {{noxCheckedVersion}} is released. Go to github to download.\nCurrent version:{{currentVersion}}\nDev version: {{devVersion}}",
    "UpdatedVersionAlertTitle": "Noxplayer updated!",
    "UpdatedVersionAlertContent": "Noxplayer updated to version {{version}}! Check out the release notes at github.",
    "UpdateGo2Github": "Go to Github"
  },
  "CustomSkin": {
    "SearchFailMsg": "Failed to load custom skin JSON file",
    "SearchBarLabel": "Custom skin JSON web address"
  },
  "About": {
    "Disclaimer1": "This project and its contents are not affiliated with, funded, authorized, endorsed by, or in any way associated with Bilibili Inc. or any of its affiliates and subsidiaries. (But we really want to, call us)",
    "Disclaimer2": "Any trademark, service mark, trade name, or other intellectual property rights used in this project are owned by the respective owners.",
    "About1": "APM is an open source software. You may find the source code of APM at github.com/lovegaoshi/azusa-player-mobile free of charge. Please consider adding your music stream cuts on bilibili via the video series list functionality with keywords to add videos into the series list automatically."
  },
  "AndroidAuto": {
    "PlaylistTab": "Playlists",
    "NowPlayingTab": "Now Playing",
    "GoToNowPlayingTab": "go to now playing",
    "PlayingShuffle": "No match! Shuffling instead..."
  },
  "PlaylistRegex": {
    "absoluteMatch": "Absolute Match",
    "artistMatch": "Artist",
    "albumMatch": "Album",
    "cachedMatch": "Cached",
    "durationLessMatch": "Duration <",
    "durationMoreMatch": "Duration >",
    "regexMatch": "Regex"
  },
  "Accessibility": { "gif": "GIF" },
  "Menu": { "local": "Local" },
  "Lyric": {
    "loading": "Loading lyric...",
    "failedToFetch": "lrc failed to fetch",
    "notFound": "[00:00.000] Lyric was not found",
    "options": "Lyric Options",
    "changeLyric": "Change Source",
    "offset": "Adjust Offset"
  },
  "PlaylistAnalytics": {
    "title": "Playlist Analytics of {{val}}",
    "uniqCount": "Playlist has {{val}} unique songs;",
    "topX": "Most common songs: {{val}}",
    "new": "New songs: {{val}}",
    "avg": "Playlist contains a total of {{val1}} bvids, and {{val2}} songs per bvid on average;",
    "shazamFailed": "shazam failed statistics: {{val1}} ({{val2}}%)"
  }
}
